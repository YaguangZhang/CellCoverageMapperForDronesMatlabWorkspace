function [osVersion, carrier, downSpeedBps, upSpeedBps, ...
    downEndLatLon, upEndLatLon, flagIsCell, testId] ...
    = parseFccSpeedTestAppLog(logStruct)
%PARSEFCCSPEEDTESTAPPLOG Extract the information of interest from the logs
%of the FCC Speed Test app.
%
% Yaguang Zhang, Purdue, 10/21/2021

if isfield(logStruct, 'operating_system_version')
    % Android.
    osVersion = logStruct.operating_system_version;
    assert(strcmp(osVersion(1:7), 'Android'), ...
        ['Error! Expecting Android logs based on the log structure ', ...
        'instead of ', osVersion, '!']);
    try
        testId = logStruct.tests.testId;
    catch
        testId = '';
    end
    carrier = logStruct.carrier_name;
    downSpeedBps = ...
        logStruct.tests.download.bytes_transferred * 8 / ...
        logStruct.tests.download.duration * (10^6);
    upSpeedBps = ...
        logStruct.tests.upload.bytes_transferred * 8 / ...
        logStruct.tests.upload.duration * (10^6);
    downEndLatLon = [ ...
        logStruct.tests.download.environment.end.location.lat, ...
        logStruct.tests.download.environment.end.location.lon];
    upEndLatLon = [ ...
        logStruct.tests.upload.environment.end.location.lat, ...
        logStruct.tests.upload.environment.end.location.lon];
    flagIsCell = strcmp( ...
        logStruct.tests.download.environment.beginning ...
        .telephony.connection_type, 'cell') ...
        & strcmp( ...
        logStruct.tests.download.environment.end ...
        .telephony.connection_type, 'cell') ...
        & strcmp( ...
        logStruct.tests.upload.environment.beginning ...
        .telephony.connection_type, 'cell') ...
        & strcmp( ...
        logStruct.tests.upload.environment.end ...
        .telephony.connection_type, 'cell');
elseif isfield(logStruct, 'device_environment')
    % Apple.
    osVersion = logStruct.device_environment.operating_system_version;
    assert(strcmp(osVersion(1:3), 'iOS'), ...
        ['Error! Expecting iOS logs based on the log structure ', ...
        'instead of ', osVersion, '!']);

    try
        testId = logStruct.tests.Download.referenceNumber;
    catch
        testId = '';
    end
    carrier = logStruct.device_environment.carrier_name;
    downSpeedBps = ...
        logStruct.tests.Download.testResult*10^6;
    upSpeedBps = ...
        logStruct.tests.Upload.testResult*10^6;
    downEndLatLon = [ ...
        logStruct.tests.Download.latitude, ...
        logStruct.tests.Download.longitude];
    upEndLatLon = [ ...
        logStruct.tests.Upload.latitude, ...
        logStruct.tests.Upload.longitude];
    flagIsCell = ~(logStruct.tests.Download.isWiFi ...
        || logStruct.tests.Upload.isWiFi);
else
    disp('Input log:')
    disp(logStruct)
    error('Error! Unexpected log structure!')
end

end
% EOF